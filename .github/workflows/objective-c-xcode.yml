name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

steps:
  - name: Checkout repository
    uses: actions/checkout@v4
    with:
      submodules: recursive

  - name: Cache Git submodules
    uses: actions/cache@v4
    with:
      path: |
        qemu-tcti
        third-party/SwiftTerm
      key: ${{ runner.os }}-submodules-${{ hashFiles('.gitmodules') }}
      restore-keys: |
        ${{ runner.os }}-submodules-
          
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

          
      - name: Install Nix
        run: |
          curl -L https://nixos.org/nix/install | sh -s -- --daemon
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          nix --version

      # - name: Set up Ruby & CocoaPods
      #   run: |
      #     sudo gem install cocoapods
      #     pod install --project-directory=tctiSH

      - name: Build native dependencies (Nix)
        #--command bash build_dependencies.sh
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          nix develop --extra-experimental-features nix-command --extra-experimental-features flakes

      - name: Build and copy tctictl utility
        working-directory: utils/tctictl
        run: |
          bash build_and_copy.sh

      - name: Resolve Swift Package Dependencies
        run: |
          xcodebuild -resolvePackageDependencies -workspace tctiSH.xcworkspace \
            -scheme tctiSH

      - name: Build unsigned .xcarchive
        run: |
          xcodebuild -workspace tctiSH.xcworkspace \
            -scheme tctiSH \
            -configuration Release \
            -archivePath ${{ github.workspace }}/build/tctiSH.xcarchive \
            archive \
            CODE_SIGNING_ALLOWED=NO CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      - name: Export unsigned IPA
        run: |
          cat > exportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>compileBitcode</key>
            <false/>
            <key>signingCertificate</key>
            <string></string>
            <key>provisioningProfiles</key>
            <dict/>
          </dict>
          </plist>
          EOF
          xcodebuild -exportArchive \
            -archivePath ${{ github.workspace }}/build/tctiSH.xcarchive \
            -exportPath ${{ github.workspace }}/build/unsigned_ipa \
            -exportOptionsPlist exportOptions.plist \
            CODE_SIGNING_ALLOWED=NO CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      - name: Upload unsigned IPA
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-ipa
          path: build/unsigned_ipa/*.ipa
          
